@model Report
@{
    ViewData["Title"] = "Create report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<h1 class="text-success mb-5">Create Report</h1>
<br />

@if (ViewBag.IsCopy)
{
    <p class="text-danger text-uppercase font-weight-bolder">report is already exists.</p>
}
@if (!ViewBag.ProductExist)
{
    <p class="text-danger text-uppercase font-weight-bolder">product doesn't exist.</p>
}
<form method="post" asp-action="Create">
    <div class="font-weight-bold text-info">
        <input type="hidden" asp-for="CategoryId" id="categoryId" />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="ProductName" class="col-form-label">Product name:</label>
            </div>
            <div class="col-5">
                <input asp-for="ProductName" class="form-control" />
            </div>
            <span asp-validation-for="ProductName" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label for="Category" class="col-form-label ">Product category:</label>
            </div>
            <div class="col-5">
                <input type="text" autocomplete="off" id="Category" placeholder="Select" />
                <span asp-validation-for="Category.Id" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-5 offset-2">
            <partial name="_CreateAndBackToListButton" />
        </div>
    </div>
</form>

@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <script src="~/js/comboTreePlugin.js"></script>
    <script>

        const url = "/Admin/Category/GetCategories";

        $(document).ready(() => {
            $.getJSON(url, data => {
                $("#categoryId").val(data[0].id);

                const instance = $('#Category').comboTree({
                    source: data,
                    selected: ['0'],
                    isMultiple: false
                });

                $('#Category').change(() => {
                    let ids = instance.getSelectedIds();
                    $("#categoryId").val(ids[0]);
                });
            })
        })

    </script>
}